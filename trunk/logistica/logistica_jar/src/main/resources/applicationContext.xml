<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:s="http://www.springframework.org/schema/security" xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:ehcache="http://www.springmodules.org/schema/ehcache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springmodules.org/schema/ehcache http://www.springmodules.org/schema/cache/springmodules-ehcache.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/security
 	   http://www.springframework.org/schema/security/spring-security-3.0.xsd">


	<!-- export de las estadisticas de la cache -->
	<bean id="jmxExporter" class="org.springframework.jmx.export.MBeanExporter">
		<property name="beans">
			<map>
				<entry key="Hibernate:name=statistics">
					<ref local="statisticsBean" />
				</entry>
				<entry key="ehcache:name=ehCacheManagerMBean" value-ref="ehCacheManagerMBean" />
			</map>
		</property>
	</bean>

	<bean id="statisticsBean" class="org.hibernate.jmx.StatisticsService">
		<property name="statisticsEnabled">
			<value>true</value>
		</property>
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>

	<bean name="ehCacheManagerMBean" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" />
	
	<!-- seguridad de spring security -->
	<s:http auto-config="true" use-expressions="true">
        <s:intercept-url pattern="/index.jsf" access="hasRole('ROLE_USER')"/>
        <s:form-login login-page="/login.jsf" authentication-failure-url="/login.jsf?erro=true"/>
    </s:http>
 
    <s:authentication-manager>
        <s:authentication-provider>
            <s:jdbc-user-service data-source-ref="dataSource"
               users-by-username-query="SELECT usuario, contrasenia, enable FROM usuario WHERE usuario=?"
               authorities-by-username-query="SELECT Usuario_usuario as usuario, authority_nombre as authority FROM usuario_authority WHERE Usuario_usuario=?"
            />
        </s:authentication-provider>
    </s:authentication-manager>
 


	<!--<bean id="mbeanServer" class="org.springframework.jmx.support.MBeanServerFactoryBean"> 
		<property name="locateExistingServerIfPossible" value="true" /> </bean> <bean 
		class="net.sf.ehcache.management.ManagementService" init-method="init"> <constructor-arg 
		ref="cacheManager" /> <constructor-arg ref="mbeanServer" /> <constructor-arg 
		value="true" /> <constructor-arg value="true" /> <constructor-arg value="true" 
		/> <constructor-arg value="true" /> </bean> <bean id="statisticsService" 
		class="org.hibernate.jmx.StatisticsService"> <property name="statisticsEnabled" 
		value="true"/> <property name="sessionFactory" ref="sessionFactory"/> </bean> --><!--<bean id="hibernateStatisticsMBean" class="org.hibernate.jmx.StatisticsService"> 
		<property name="statisticsEnabled" value="true" /> <property name="sessionFactory" 
		ref="sessionFactory" /> </bean> <bean id="ehCacheMBeanRegistration" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean"> 
		<property name="staticMethod" value="net.sf.ehcache.management.ManagementService.registerMBeans" 
		/> <property name="arguments"> <list> <ref bean="cacheManager" /> <ref bean="mbeanServer" 
		/> <value>true</value> <value>true</value> <value>true</value> <value>true</value> 
		</list> </property> </bean> <bean id="mbeanServer" class="org.springframework.jmx.support.MBeanServerFactoryBean"> 
		<property name="locateExistingServerIfPossible" value="true" /> </bean> <bean 
		id="mbeanExporter" class="org.springframework.jmx.export.MBeanExporter"> 
		<property name="beans"> <map> <entry key="category=statistics,name=hibernate" 
		value-ref="hibernateStatisticsMBean" /> </map> </property> <property name="server" 
		ref="mbeanServer" /> </bean> <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"> 
		<property name="configLocation" value="classpath:ehcache.xml" /> <property 
		name="shared" value="true" /> </bean> <bean id="jmxExporter" class="org.springframework.jmx.export.MBeanExporter"> 
		<property name="beans"> <map> <entry key="Hibernate:name=statistics"> <ref 
		bean="statisticsBean" /> </entry> </map> </property> <property name="server" 
		ref="mbeanServer"></property> </bean> <bean id="statisticsBean" class="org.hibernate.jmx.StatisticsService"> 
		<property name="statisticsEnabled"> <value>true</value> </property> <property 
		name="sessionFactory"> <ref bean="sessionFactory" /> </property> </bean> --><!-- only needed explicitly because ehcache needs it to register itself 
		<bean id="mbeanServer" class="org.springframework.jmx.support.MBeanServerFactoryBean"> 
		<property name="locateExistingServerIfPossible" value="true" /> </bean> <bean 
		id="ehCacheMBeanRegistration" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean"> 
		<property name="staticMethod" value="net.sf.ehcache.management.ManagementService.registerMBeans" 
		/> <property name="arguments"> <list> <ref bean="innerCacheManager" /> <ref 
		bean="mbeanServer" /> <value>true</value> <value>true</value> <value>true</value> 
		<value>true</value> </list> </property> </bean> <bean id="innerCacheManager" 
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"> <property 
		name="shared" value="true" /> </bean> <bean class="org.springframework.jmx.export.annotation.AnnotationMBeanExporter"> 
		<property name="server" ref="mbeanServer" /> <property name="beans"> <map> 
		<entry key="Hibernate:type=statistics,application=applicationOne"> <bean 
		class="org.hibernate.jmx.StatisticsService"> <property name="statisticsEnabled" 
		value="true" /> <property name="sessionFactory" ref="sessionFactory" /> </bean> 
		</entry> </map> </property> </bean> -->



	<!--<ehcache:config configLocation="classpath:ehcache.xml" /> <bean id="mbeanServer" 
		class="org.springframework.jndi.JndiObjectFactoryBean"> <property name="jndiName" 
		value="java:comp/env/jmx/runtime"/> </bean> <bean id="mbeanServer" class="org.springframework.jmx.support.MBeanServerFactoryBean"> 
		<property name="locateExistingServerIfPossible" value="true" /> </bean> <bean 
		class="net.sf.ehcache.management.ManagementService" init-method="init"> <constructor-arg 
		ref="cacheManager" /> <constructor-arg ref="mbeanServer" /> <constructor-arg 
		value="true" /> <constructor-arg value="true" /> <constructor-arg value="true" 
		/> <constructor-arg value="true" /> </bean> <ehcache:proxy id="clienteDAOImpl" 
		refId="clienteDAOTarget"> <ehcache:caching cacheName="clienteCache" methodName="*" 
		/> </ehcache:proxy> -->

	<bean id="clienteDAOImpl" class="logistica.common.dao.ClienteDAOImpl">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>

	<!-- ConexiÃ³n a base de datos -->
	<bean id="myDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName">
			<value>java:comp/env/jdbc/logisticaDS</value>
		</property>
	</bean>

	<!-- Hibernate SessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource">
			<ref local="myDataSource" />
		</property>

		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
				<!-- <prop key="hibernate.connection.pool_size">15</prop> -->
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.default_schema">logistica</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>

				<prop key="hibernate.cache.provider_class">net.sf.Ehcache.hibernate.SingletonEhcacheProvider
				</prop>
				<prop key="hibernate.generate_statistics">true</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="net.sf.ehcache.configurationResourceName">/ehcache.xml</prop>
				<prop key="hibernate.cache.region.factory_class">net.sf.ehcache.hibernate.SingletonEhCacheRegionFactory
				</prop>
			</props>
		</property>

		<property name="annotatedClasses">
			<list>
				<value>logistica.model.Sujeto</value>
				<value>logistica.model.Cliente</value>
			</list>
		</property>
	</bean>

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>

	<bean id="clienteDAO"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager">
			<ref local="transactionManager" />
		</property>
		<property name="target">
			<ref local="clienteDAOImpl" />
		</property>
		<property name="transactionAttributes">
			<!-- defino como maneja las transacciones -->
			<props>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>

</beans>