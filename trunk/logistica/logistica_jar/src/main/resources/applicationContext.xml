<?xml version="1.0" encoding="UTF-8"?>
<!--<beans xmlns:s="http://www.springframework.org/schema/security" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:ehcache="http://www.springmodules.org/schema/ehcache" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd 
	http://www.springmodules.org/schema/ehcache http://www.springmodules.org/schema/cache/springmodules-ehcache.xsd 
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd 
	http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.5.xsd"> -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd">

	<!-- export de las estadisticas de la cache -->
	<!--<bean id="jmxExporter" class="org.springframework.jmx.export.MBeanExporter"> 
		<property name="beans"> <map> <entry key="Hibernate:name=statistics"> <ref 
		local="statisticsBean" /> </entry> <entry key="ehcache:name=ehCacheManagerMBean" 
		value-ref="ehCacheManagerMBean" /> </map> </property> </bean> <bean id="statisticsBean" 
		class="org.hibernate.jmx.StatisticsService"> <property name="statisticsEnabled"> 
		<value>true</value> </property> <property name="sessionFactory"> <ref local="sessionFactory" 
		/> </property> </bean> <bean name="ehCacheManagerMBean" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" 
		/> --><!-- seguridad de spring security -->
	<security:http auto-config="true" use-expressions="true">
		<security:intercept-url pattern="/pages/login*"
			filters="none" />
		<security:intercept-url pattern="/pages/admMovil*"
			access="hasAnyRole('ROLE_MOBILE_CONTROL', 'ROLE_ADMIN')" />
		<security:intercept-url pattern="/pages/repMovilesDisponibles*"
			access="hasAnyRole('ROLE_MOBILE_CONTROL', 'ROLE_ADMIN')" />
		<security:intercept-url pattern="/pages/admPropietario*"
			access="hasAnyRole('ROLE_MOBILE_CONTROL', 'ROLE_ADMIN')" />
		<security:intercept-url pattern="/pages/admChofer*"
			access="hasAnyRole('ROLE_MOBILE_CONTROL', 'ROLE_ADMIN')" />
		<security:intercept-url pattern="/pages/welcome*"
			access="hasAnyRole('ROLE_MOBILE_CONTROL', 'ROLE_ADMIN', 'ROLE_USER')" />
		<security:intercept-url pattern="/pages/admSucursal*"
			access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')" />
		<security:intercept-url pattern="/pages/admOtrosServicios*"
			access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')" />
		<security:intercept-url pattern="/pages/admHojaRuta*"
			access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')" />
		<security:intercept-url pattern="/pages/admDiagramacionDiaria*"
			access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')" />

		<security:intercept-url pattern="/pages/admUsuario*"
			access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/**"
			access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN','ROLE_MOBILE_CONTROL')" />
		<security:form-login login-page="/pages/login.jsp"
			default-target-url="/pages/welcome.xhtml" authentication-failure-url="/pages/login.jsp?login_error=1" />
	</security:http>


	<!-- <security:http auto-config='true'> <security:intercept-url pattern="/**" 
		access="ROLE_USER" /> </security:http> -->


	<security:authentication-manager>
		<security:authentication-provider>

			<!--<security:user-service> <security:user name="admin" password="admin" 
				authorities="ROLE_USER" /> </security:user-service> -->

			<security:password-encoder hash="sha" />

			<security:jdbc-user-service
				data-source-ref="myDataSource"
				users-by-username-query="SELECT usuario, contrasenia, enable FROM logistica.usuario WHERE usuario=?"
				authorities-by-username-query="select u.usuario,r.rolenumlist from logistica.usuario u,logistica.rolenum r
where r.usuario_id=u.id and u.usuario =?" />
		</security:authentication-provider>
	</security:authentication-manager>

	<bean id="clienteDAOImpl" class="logistica.common.dao.ClienteDAOImpl">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>

	<bean id="usuarioDAOImpl" class="logistica.common.dao.UsuarioDAOImpl">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>

	<bean id="proveedorDAOImpl" class="logistica.common.dao.ProveedorDAOImpl">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>

	<bean id="choferDAOImpl" class="logistica.common.dao.ChoferDAOImpl">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>

	<bean id="propietarioDAOImpl" class="logistica.common.dao.PropietarioDAOImpl">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>

	<bean id="historialMovilChoferDAOImpl" class="logistica.common.dao.HistorialMovilChoferDAOImpl">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>

	<bean id="provinciaDAOImpl" class="logistica.common.dao.ProvinciaDAOImpl">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>

	<bean id="localidadDAOImpl" class="logistica.common.dao.LocalidadDAOImpl">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>

	<bean id="sucursalDAOImpl" class="logistica.common.dao.SucursalDAOImpl">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>

	<bean id="movilDAOImpl" class="logistica.common.dao.MovilDAOImpl">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>

	<bean id="hojaRutaDAOImpl" class="logistica.common.dao.HojaRutaDAOImpl">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>

	<bean id="movilNoOperativoDAOImpl" class="logistica.common.dao.MovilNoOperativoDAOImpl">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>

	<bean id="otrosServiciosDAOImpl" class="logistica.common.dao.OtrosServiciosDAOImpl">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>

	<bean id="sucursalCotoDAOImpl" class="logistica.common.dao.SucursalCotoDAOImpl">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>

	<bean id="diagramacionDiariaDAOImpl" class="logistica.common.dao.DiagramacionDiariaDAOImpl">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>

	<!-- ConexiÃ³n a base de datos -->
	<bean id="myDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName">
			<value>java:comp/env/jdbc/logisticaDS</value>
		</property>
	</bean>

	<!-- Hibernate SessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource">
			<ref local="myDataSource" />
		</property>

		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
				<!-- <prop key="hibernate.connection.pool_size">15</prop> -->
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.default_schema">logistica</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>

				<prop key="hibernate.cache.provider_class">net.sf.Ehcache.hibernate.SingletonEhcacheProvider
				</prop>
				<prop key="hibernate.generate_statistics">true</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="net.sf.ehcache.configurationResourceName">/ehcache.xml</prop>
				<prop key="hibernate.cache.region.factory_class">net.sf.ehcache.hibernate.SingletonEhCacheRegionFactory
				</prop>
			</props>
		</property>

		<property name="annotatedClasses">
			<list>
				<value>logistica.model.Sujeto</value>
				<value>logistica.model.Cliente</value>
				<value>logistica.model.Authority</value>
				<value>logistica.model.Usuario</value>
				<value>logistica.model.Proveedor</value>
				<value>logistica.model.Chofer</value>
				<value>logistica.model.Propietario</value>
				<value>logistica.model.MovilPropietarioDetalle</value>
				<value>logistica.model.Autonomo</value>
				<value>logistica.model.Form817</value>
				<value>logistica.model.Form170</value>
				<value>logistica.model.Nomina</value>
				<value>logistica.model.Recibo</value>
				<value>logistica.model.Provincia</value>
				<value>logistica.model.Localidad</value>
				<value>logistica.model.Sucursal</value>
				<value>logistica.model.Movil</value>
				<value>logistica.model.HojaRuta</value>
				<value>logistica.model.DetalleHojaRuta</value>
				<value>logistica.model.MovilNoOperativo</value>
				<value>logistica.model.OtrosServicios</value>
				<value>logistica.model.SucursalCoto</value>
				<value>logistica.model.DiagramacionDiaria</value>
				<value>logistica.model.DetalleSucursal</value>
				<value>logistica.model.DetalleAsignacion</value>
				<value>logistica.model.HistorialMovilChofer</value>
			</list>
		</property>
	</bean>

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>

	<bean id="clienteDAO"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager">
			<ref local="transactionManager" />
		</property>
		<property name="target">
			<ref local="clienteDAOImpl" />
		</property>
		<property name="transactionAttributes">
			<!-- defino como maneja las transacciones -->
			<props>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>

	<bean id="usuarioDAO"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager">
			<ref local="transactionManager" />
		</property>
		<property name="target">
			<ref local="usuarioDAOImpl" />
		</property>
		<property name="transactionAttributes">
			<!-- defino como maneja las transacciones -->
			<props>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>

	<bean id="proveedorDAO"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager">
			<ref local="transactionManager" />
		</property>
		<property name="target">
			<ref local="proveedorDAOImpl" />
		</property>
		<property name="transactionAttributes">
			<!-- defino como maneja las transacciones -->
			<props>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>

	<bean id="choferDAO"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager">
			<ref local="transactionManager" />
		</property>
		<property name="target">
			<ref local="choferDAOImpl" />
		</property>
		<property name="transactionAttributes">
			<!-- defino como maneja las transacciones -->
			<props>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>

	<bean id="propietarioDAO"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager">
			<ref local="transactionManager" />
		</property>
		<property name="target">
			<ref local="propietarioDAOImpl" />
		</property>
		<property name="transactionAttributes">
			<!-- defino como maneja las transacciones -->
			<props>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>

	<bean id="historialMovilChoferDAO"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager">
			<ref local="transactionManager" />
		</property>
		<property name="target">
			<ref local="historialMovilChoferDAOImpl" />
		</property>
		<property name="transactionAttributes">
			<!-- defino como maneja las transacciones -->
			<props>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>

	<bean id="provinciaDAO"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager">
			<ref local="transactionManager" />
		</property>
		<property name="target">
			<ref local="provinciaDAOImpl" />
		</property>
		<property name="transactionAttributes">
			<!-- defino como maneja las transacciones -->
			<props>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>

	<bean id="localidadDAO"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager">
			<ref local="transactionManager" />
		</property>
		<property name="target">
			<ref local="localidadDAOImpl" />
		</property>
		<property name="transactionAttributes">
			<!-- defino como maneja las transacciones -->
			<props>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>

	<bean id="sucursalDAO"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager">
			<ref local="transactionManager" />
		</property>
		<property name="target">
			<ref local="sucursalDAOImpl" />
		</property>
		<property name="transactionAttributes">
			<!-- defino como maneja las transacciones -->
			<props>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>

	<bean id="movilDAO"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager">
			<ref local="transactionManager" />
		</property>
		<property name="target">
			<ref local="movilDAOImpl" />
		</property>
		<property name="transactionAttributes">
			<!-- defino como maneja las transacciones -->
			<props>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>

	<bean id="hojaRutaDAO"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager">
			<ref local="transactionManager" />
		</property>
		<property name="target">
			<ref local="hojaRutaDAOImpl" />
		</property>
		<property name="transactionAttributes">
			<!-- defino como maneja las transacciones -->
			<props>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>

	<bean id="movilNoOperativoDAO"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager">
			<ref local="transactionManager" />
		</property>
		<property name="target">
			<ref local="movilNoOperativoDAOImpl" />
		</property>
		<property name="transactionAttributes">
			<!-- defino como maneja las transacciones -->
			<props>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>

	<bean id="otrosServiciosDAO"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager">
			<ref local="transactionManager" />
		</property>
		<property name="target">
			<ref local="otrosServiciosDAOImpl" />
		</property>
		<property name="transactionAttributes">
			<!-- defino como maneja las transacciones -->
			<props>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>

	<bean id="sucursalCotoDAO"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager">
			<ref local="transactionManager" />
		</property>
		<property name="target">
			<ref local="sucursalCotoDAOImpl" />
		</property>
		<property name="transactionAttributes">
			<!-- defino como maneja las transacciones -->
			<props>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>

	<bean id="diagramacionDiariaDAO"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager">
			<ref local="transactionManager" />
		</property>
		<property name="target">
			<ref local="diagramacionDiariaDAOImpl" />
		</property>
		<property name="transactionAttributes">
			<!-- defino como maneja las transacciones -->
			<props>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="delete*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>

	<!-- <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"> 
		<property name="ignoreUnresolvablePlaceholders"> <value>true</value> </property> 
		<property name="locations"> <list> <value>classpath*:app.properties</value> 
		</list> </property> </bean> -->

	<!--#ConfiguraciÃ³n del servicio de Spring: MailSernder -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<!-- <property name="host" value="127.0.0.1" /> -->
		<property name="host" value="smtp.gmail.com" />
		<property name="port" value="587" />
		<property name="username" value="degac.logistica@gmail.com" />
		<property name="password" value="degac1234" />
		<property name="defaultEncoding" value="UTF-8" />
		<property name="javaMailProperties">
			<props>
				<!-- <prop key="mail.debug">true</prop> -->
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
			</props>
		</property>
	</bean>

	<!--#ConfiguraciÃ³n de nuestro servicio:MailService -->
	<bean id="mailService" class="logistica.util.MailServiceImpl">
		<property name="active" value="true" />
		<property name="mailSender" ref="mailSender" />
		<property name="from" value="degac.logistica@gmail.com" />
	</bean>

	<!-- EnvÃ­o de mails -->
	<bean id="mailVencimientoBean" class="logistica.cron.MovilVencimiento">
		<property name="mailService" ref="mailService" />
		<property name="dao" ref="movilDAO" />
		
	</bean>



	<bean id="unaTarea"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="mailVencimientoBean" />
		<property name="targetMethod" value="notificarVencimientos" />
		<property name="concurrent" value="false" />
	</bean>

	<bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="unaTarea" />
		<property name="cronExpression" value="0 0/5 22 * * ?" />
	</bean>

	<bean id="schedulerFactoryBean"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cronTrigger" />
			</list>
		</property>
	</bean>

</beans>